// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using NexaSoft.Agro.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NexaSoft.Agro.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250911035904_UpdatedResponsable")]
    partial class UpdatedResponsable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NexaSoft.Agro.Domain.Auth.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<bool>("Revoked")
                        .HasColumnType("boolean")
                        .HasColumnName("revoked");

                    b.Property<string>("Token")
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_refresh_tokens");

                    b.HasIndex("Expires")
                        .HasDatabaseName("ix_expires");

                    b.HasIndex("Token")
                        .HasDatabaseName("ix_token");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_id");

                    b.ToTable("refresh_tokens", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Organizaciones.Empresas.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ContactoEmpresa")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("contacto_empresa");

                    b.Property<long>("DepartamentoEmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("departamento_empresa_id");

                    b.Property<string>("Direccion")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("direccion");

                    b.Property<long>("DistritoEmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("distrito_empresa_id");

                    b.Property<int>("EstadoEmpresa")
                        .HasColumnType("integer")
                        .HasColumnName("estado_empresa");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<double>("LatitudEmpresa")
                        .HasColumnType("double precision")
                        .HasColumnName("latitud_empresa");

                    b.Property<double>("LongitudEmpresa")
                        .HasColumnType("double precision")
                        .HasColumnName("longitud_empresa");

                    b.Property<long>("OrganizacionId")
                        .HasColumnType("bigint")
                        .HasColumnName("organizacion_id");

                    b.Property<long>("ProvinciaEmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("provincia_empresa_id");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("razon_social");

                    b.Property<string>("RucEmpresa")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("ruc_empresa");

                    b.Property<string>("TelefonoContactoEmpresa")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("telefono_contacto_empresa");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_empresas");

                    b.HasIndex("DepartamentoEmpresaId")
                        .HasDatabaseName("ix_empresa_departamentoempresaid");

                    b.HasIndex("DistritoEmpresaId")
                        .HasDatabaseName("ix_empresa_distritoempresaid");

                    b.HasIndex("LongitudEmpresa")
                        .HasDatabaseName("ix_empresa_longitudempresa");

                    b.HasIndex("OrganizacionId")
                        .HasDatabaseName("ix_empresa_organizacionid");

                    b.HasIndex("ProvinciaEmpresaId")
                        .HasDatabaseName("ix_empresa_provinciaempresaid");

                    b.HasIndex("RazonSocial")
                        .HasDatabaseName("ix_empresa_razonsocial");

                    b.HasIndex("RucEmpresa")
                        .HasDatabaseName("ix_empresa_rucempresa");

                    b.ToTable("empresas", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Organizaciones.Organizacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ContactoOrganizacion")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("contacto_organizacion");

                    b.Property<int>("EstadoOrganizacion")
                        .HasColumnType("integer")
                        .HasColumnName("estado_organizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombreOrganizacion")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("nombre_organizacion");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("observaciones");

                    b.Property<string>("RucOrganizacion")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("ruc_organizacion");

                    b.Property<int>("SectorId")
                        .HasColumnType("integer")
                        .HasColumnName("sector_id");

                    b.Property<string>("TelefonoContacto")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("telefono_contacto");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_organizaciones");

                    b.HasIndex("NombreOrganizacion")
                        .HasDatabaseName("ix_organizacion_nombreorganizacion");

                    b.HasIndex("RucOrganizacion")
                        .HasDatabaseName("ix_organizacion_rucorganizacion");

                    b.ToTable("organizaciones", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Archivos.Archivo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("DescripcionArchivo")
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("descripcion_archivo");

                    b.Property<int>("EstadoArchivo")
                        .HasColumnType("integer")
                        .HasColumnName("estado_archivo");

                    b.Property<long?>("EstructuraId")
                        .HasColumnType("bigint")
                        .HasColumnName("estructura_id");

                    b.Property<DateOnly>("FechaCarga")
                        .HasColumnType("date")
                        .HasColumnName("fecha_carga");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombreArchivo")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("nombre_archivo");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("nombre_corto");

                    b.Property<string>("RutaArchivo")
                        .HasMaxLength(350)
                        .HasColumnType("character varying(350)")
                        .HasColumnName("ruta_archivo");

                    b.Property<long?>("SubCapituloId")
                        .HasColumnType("bigint")
                        .HasColumnName("sub_capitulo_id");

                    b.Property<int>("TipoArchivoId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_archivo_id");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_archivos");

                    b.HasIndex("DescripcionArchivo")
                        .HasDatabaseName("ix_archivo_nombre_corto");

                    b.HasIndex("EstructuraId")
                        .HasDatabaseName("ix_archivos_estructura_id");

                    b.HasIndex("SubCapituloId")
                        .HasDatabaseName("ix_archivos_sub_capitulo_id");

                    b.ToTable("archivos", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Capitulos.Capitulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("DescripcionCapitulo")
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("descripcion_capitulo");

                    b.Property<int>("EstadoCapitulo")
                        .HasColumnType("integer")
                        .HasColumnName("estado_capitulo");

                    b.Property<long>("EstudioAmbientalId")
                        .HasColumnType("bigint")
                        .HasColumnName("estudio_ambiental_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombreCapitulo")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("nombre_capitulo");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_capitulos");

                    b.HasIndex("EstudioAmbientalId")
                        .HasDatabaseName("ix_capitulos_estudio_ambiental_id");

                    b.HasIndex("NombreCapitulo")
                        .HasDatabaseName("ix_capitulo_nombre");

                    b.ToTable("capitulos", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Cumplimientos.Cumplimiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("EstadoCumplimiento")
                        .HasColumnType("integer")
                        .HasColumnName("estado_cumplimiento");

                    b.Property<long>("EventoRegulatorioId")
                        .HasColumnType("bigint")
                        .HasColumnName("evento_regulatorio_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateOnly?>("FechaCumplimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_cumplimiento");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("observaciones");

                    b.Property<bool?>("RegistradoaTiempo")
                        .HasColumnType("boolean")
                        .HasColumnName("registradoa_tiempo");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_cumplimientos");

                    b.HasIndex("EventoRegulatorioId")
                        .HasDatabaseName("ix_cumplimiento_eventoregulatorioid");

                    b.HasIndex("FechaCumplimiento")
                        .HasDatabaseName("ix_cumplimiento_fechacumplimiento");

                    b.HasIndex("RegistradoaTiempo")
                        .HasDatabaseName("ix_cumplimiento_registradoatiempo");

                    b.ToTable("cumplimientos", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Cumplimientos.CumplimientoSeguimiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("EstadoAnteriorId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_anterior_id");

                    b.Property<int>("EstadoNuevoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_nuevo_id");

                    b.Property<long>("EventoRegulatorioId")
                        .HasColumnType("bigint")
                        .HasColumnName("evento_regulatorio_id");

                    b.Property<DateOnly>("FechaCambio")
                        .HasColumnType("date")
                        .HasColumnName("fecha_cambio");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("observaciones");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_cumplimientos_seguimientos");

                    b.HasIndex("EventoRegulatorioId")
                        .HasDatabaseName("ix_cumplimientos_seguimientos_evento_regulatorio_id");

                    b.HasIndex("FechaCambio")
                        .HasDatabaseName("ix_cumplimiento_segumiento_fechacambio");

                    b.ToTable("cumplimientos_seguimientos", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Estructuras.Estructura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("DescripcionEstructura")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("descripcion_estructura");

                    b.Property<int>("EstadoEstructura")
                        .HasColumnType("integer")
                        .HasColumnName("estado_estructura");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombreEstructura")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("nombre_estructura");

                    b.Property<long?>("PadreEstructuraId")
                        .HasColumnType("bigint")
                        .HasColumnName("padre_estructura_id");

                    b.Property<long>("SubCapituloId")
                        .HasColumnType("bigint")
                        .HasColumnName("sub_capitulo_id");

                    b.Property<int>("TipoEstructuraId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_estructura_id");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_estructuras");

                    b.HasIndex("PadreEstructuraId")
                        .HasDatabaseName("ix_estructura_padreestructuraid");

                    b.HasIndex("SubCapituloId")
                        .HasDatabaseName("ix_estructura_subcapituloid");

                    b.ToTable("estructuras", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.EstudiosAmbientales.EstudioAmbiental", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CodigoEstudio")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("codigo_estudio");

                    b.Property<string>("Detalles")
                        .HasColumnType("text")
                        .HasColumnName("detalles");

                    b.Property<long>("EmpresaId")
                        .HasColumnType("bigint")
                        .HasColumnName("empresa_id");

                    b.Property<int>("EstadoEstudioAmbiental")
                        .HasColumnType("integer")
                        .HasColumnName("estado_estudio_ambiental");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("fecha_fin");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fecha_inicio");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Proyecto")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("proyecto");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_estudios_ambientales");

                    b.HasIndex("CodigoEstudio")
                        .HasDatabaseName("ix_estudioambiental_codigoestudio");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("ix_estudios_ambientales_empresa_id");

                    b.HasIndex("Proyecto")
                        .HasDatabaseName("ix_estudioambiental_proyecto");

                    b.ToTable("estudios_ambientales", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.EventosRegulatorios.EventoRegulatorio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("descripcion");

                    b.Property<int>("EstadoEventoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_evento_id");

                    b.Property<int>("EstadoEventoRegulatorio")
                        .HasColumnType("integer")
                        .HasColumnName("estado_evento_regulatorio");

                    b.Property<long>("EstudioAmbientalId")
                        .HasColumnType("bigint")
                        .HasColumnName("estudio_ambiental_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateOnly?>("FechaExpedición")
                        .HasColumnType("date")
                        .HasColumnName("fecha_expedición");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<DateOnly?>("FechaVencimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_vencimiento");

                    b.Property<int>("FrecuenciaEventoId")
                        .HasColumnType("integer")
                        .HasColumnName("frecuencia_evento_id");

                    b.Property<string>("NombreEvento")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("nombre_evento");

                    b.Property<int>("NotificarDíasAntes")
                        .HasColumnType("integer")
                        .HasColumnName("notificar_días_antes");

                    b.Property<long>("ResponsableId")
                        .HasColumnType("bigint")
                        .HasColumnName("responsable_id");

                    b.Property<int>("TipoEventoId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_evento_id");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_eventos_regulatorios");

                    b.HasIndex("EstudioAmbientalId")
                        .HasDatabaseName("ix_eventoregulatorio_estudioambientalid");

                    b.HasIndex("FechaExpedición")
                        .HasDatabaseName("ix_eventoregulatorio_fechaexpedición");

                    b.HasIndex("FechaVencimiento")
                        .HasDatabaseName("ix_eventoregulatorio_fechavencimiento");

                    b.HasIndex("FrecuenciaEventoId")
                        .HasDatabaseName("ix_eventoregulatorio_fecuenciaeventoid");

                    b.HasIndex("NombreEvento")
                        .HasDatabaseName("ix_eventoregulatorio_nombreevento");

                    b.HasIndex("ResponsableId")
                        .HasDatabaseName("ix_eventoregulatorio_responsableid");

                    b.HasIndex("TipoEventoId")
                        .HasDatabaseName("ix_eventoregulatorio_tipoeventoid");

                    b.ToTable("eventos_regulatorios", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Planos.Plano", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ArchivoId")
                        .HasColumnType("bigint")
                        .HasColumnName("archivo_id");

                    b.Property<string>("CodigoPlano")
                        .HasColumnType("text")
                        .HasColumnName("codigo_plano");

                    b.Property<long>("ColaboradorId")
                        .HasColumnType("bigint")
                        .HasColumnName("colaborador_id");

                    b.Property<int>("EscalaId")
                        .HasColumnType("integer")
                        .HasColumnName("escala_id");

                    b.Property<int>("EstadoPlano")
                        .HasColumnType("integer")
                        .HasColumnName("estado_plano");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombrePlano")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("nombre_plano");

                    b.Property<string>("SistemaProyeccion")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("sistema_proyeccion");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_planos");

                    b.HasIndex("ArchivoId")
                        .HasDatabaseName("ix_planos_archivo_id");

                    b.HasIndex("ColaboradorId")
                        .HasDatabaseName("ix_planos_colaborador_id");

                    b.ToTable("planos", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Planos.PlanoDetalle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Geometry>("Coordenadas")
                        .IsRequired()
                        .HasColumnType("geometry")
                        .HasColumnName("coordenadas");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<long>("PlanoId")
                        .HasColumnType("bigint")
                        .HasColumnName("plano_id");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_plano_detalle");

                    b.HasIndex("PlanoId")
                        .HasDatabaseName("ix_plano_detalle_plano_id");

                    b.ToTable("plano_detalle", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Responsables.Responsable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CargoResponsable")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("cargo_responsable");

                    b.Property<string>("CorreoResponsable")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("correo_responsable");

                    b.Property<int>("EstadoResponsable")
                        .HasColumnType("integer")
                        .HasColumnName("estado_responsable");

                    b.Property<long?>("EstudioAmbientalId")
                        .HasColumnType("bigint")
                        .HasColumnName("estudio_ambiental_id");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombreResponsable")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("nombre_responsable");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("observaciones");

                    b.Property<string>("TelefonoResponsable")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefono_responsable");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_responsables");

                    b.HasIndex("CorreoResponsable")
                        .HasDatabaseName("ix_responsable_correoresponsable");

                    b.HasIndex("EstudioAmbientalId")
                        .HasDatabaseName("ix_responsables_estudio_ambiental_id");

                    b.HasIndex("NombreResponsable")
                        .HasDatabaseName("ix_responsable_nombreresponsable");

                    b.ToTable("responsables", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.SubCapitulos.SubCapitulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CapituloId")
                        .HasColumnType("bigint")
                        .HasColumnName("capitulo_id");

                    b.Property<string>("DescripcionSubCapitulo")
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("descripcion_sub_capitulo");

                    b.Property<int>("EstadoSubCapitulo")
                        .HasColumnType("integer")
                        .HasColumnName("estado_sub_capitulo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombreSubCapitulo")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("nombre_sub_capitulo");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_subcapitulos");

                    b.HasIndex("CapituloId")
                        .HasDatabaseName("ix_subcapitulos_capitulo_id");

                    b.HasIndex("NombreSubCapitulo")
                        .HasDatabaseName("ix_subcapitulo_nombre");

                    b.ToTable("subcapitulos", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Constantes.Constante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Clave")
                        .HasColumnType("integer")
                        .HasColumnName("clave");

                    b.Property<int>("EstadoConstante")
                        .HasColumnType("integer")
                        .HasColumnName("estado_constante");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("TipoConstante")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tipo_constante");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.Property<string>("Valor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_constantes");

                    b.HasIndex("TipoConstante")
                        .HasDatabaseName("ix_constante_tipoconstante");

                    b.HasIndex("Clave", "Valor")
                        .HasDatabaseName("ix_constante_clave_valor");

                    b.ToTable("constantes", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Consultoras.Colaboradores.Colaborador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ApellidosColaborador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellidos_colaborador");

                    b.Property<int>("CargoId")
                        .HasColumnType("integer")
                        .HasColumnName("cargo_id");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("comentarios");

                    b.Property<long>("ConsultoraId")
                        .HasColumnType("bigint")
                        .HasColumnName("consultora_id");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("correo_electronico");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("integer")
                        .HasColumnName("departamento_id");

                    b.Property<string>("Direccion")
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("direccion");

                    b.Property<int>("EstadoCivilColaboradorId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_civil_colaborador_id");

                    b.Property<int>("EstadoColaborador")
                        .HasColumnType("integer")
                        .HasColumnName("estado_colaborador");

                    b.Property<DateOnly?>("FechaCese")
                        .HasColumnType("date")
                        .HasColumnName("fecha_cese");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateOnly?>("FechaIngreso")
                        .HasColumnType("date")
                        .HasColumnName("fecha_ingreso");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<int>("GeneroColaboradorId")
                        .HasColumnType("integer")
                        .HasColumnName("genero_colaborador_id");

                    b.Property<string>("NombreCompletoColaborador")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre_completo_colaborador");

                    b.Property<string>("NombresColaborador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombres_colaborador");

                    b.Property<string>("NumeroDocumentoIdentidad")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero_documento_identidad");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("numeric")
                        .HasColumnName("salario");

                    b.Property<string>("TelefonoMovil")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefono_movil");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_documento_id");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_colaboradores");

                    b.HasIndex("ConsultoraId")
                        .HasDatabaseName("ix_colaboradores_consultora_id");

                    b.HasIndex("GeneroColaboradorId")
                        .HasDatabaseName("ix_colaborador_generocolaboradorid");

                    b.HasIndex("NombreCompletoColaborador")
                        .HasDatabaseName("ix_colaborador_nombrecompletocolaborador");

                    b.HasIndex("NombresColaborador")
                        .HasDatabaseName("ix_colaborador_nombrescolaborador");

                    b.HasIndex("NumeroDocumentoIdentidad")
                        .HasDatabaseName("ix_colaborador_numerodocumentoidentidad");

                    b.ToTable("colaboradores", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Consultoras.Consultora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CorreoOrganizacional")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("correo_organizacional");

                    b.Property<string>("DireccionConsultora")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("direccion_consultora");

                    b.Property<int>("EstadoConsultora")
                        .HasColumnType("integer")
                        .HasColumnName("estado_consultora");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombreConsultora")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nombre_consultora");

                    b.Property<string>("RepresentanteConsultora")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("representante_consultora");

                    b.Property<string>("RucConsultora")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("ruc_consultora");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_consultoras");

                    b.HasIndex("CorreoOrganizacional")
                        .HasDatabaseName("ix_consultora_correoorganizacional");

                    b.HasIndex("NombreConsultora")
                        .HasDatabaseName("ix_consultora_nombreconsultora");

                    b.HasIndex("RucConsultora")
                        .HasDatabaseName("ix_consultora_rucconsultora");

                    b.ToTable("consultoras", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Contadores.Contador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Agrupador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("agrupador");

                    b.Property<string>("Entidad")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("entidad");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Prefijo")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("prefijo");

                    b.Property<string>("TipoDato")
                        .HasColumnType("text")
                        .HasColumnName("tipo_dato");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.Property<long>("ValorActual")
                        .HasMaxLength(16)
                        .HasColumnType("bigint")
                        .HasColumnName("valor_actual");

                    b.Property<int?>("ValorRpeticion")
                        .HasColumnType("integer")
                        .HasColumnName("valor_rpeticion");

                    b.HasKey("Id")
                        .HasName("pk_contadores");

                    b.HasIndex("Entidad", "Prefijo")
                        .HasDatabaseName("ix_contador_entidad_prefijo");

                    b.ToTable("contadores", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Menus.MenuItemOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("EstadoMenu")
                        .HasColumnType("integer")
                        .HasColumnName("estado_menu");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("icon");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("label");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id");

                    b.Property<string>("Route")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("route");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_menu_item_options");

                    b.HasIndex("Label")
                        .HasDatabaseName("ix_menu_label");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_menu_item_options_parent_id");

                    b.ToTable("menu_item_options", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Menus.MenuRole", b =>
                {
                    b.Property<long>("MenuItemOptionId")
                        .HasColumnType("bigint")
                        .HasColumnName("menu_item_option_id");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.HasKey("MenuItemOptionId", "RoleId")
                        .HasName("pk_menu_roles");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_menu_roles_role_id");

                    b.ToTable("menu_roles", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Permissions.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("description");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("ReferenciaControl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("referencia_control");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_permissions");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_permission_name");

                    b.HasIndex("ReferenciaControl")
                        .HasDatabaseName("ix_permission_referenciacontrol");

                    b.ToTable("permissions", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Roles.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("description");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_roles");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_role_name");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Ubigeos.Ubigeo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("descripcion");

                    b.Property<int>("EstadoUbigeo")
                        .HasColumnType("integer")
                        .HasColumnName("estado_ubigeo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<int>("Nivel")
                        .HasColumnType("integer")
                        .HasColumnName("nivel");

                    b.Property<long?>("PadreId")
                        .HasColumnType("bigint")
                        .HasColumnName("padre_id");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_ubigeos");

                    b.HasIndex("Descripcion")
                        .HasDatabaseName("ix_ubigeo_descripcion");

                    b.HasIndex("Nivel")
                        .HasDatabaseName("ix_ubigeo_nivel");

                    b.HasIndex("PadreId")
                        .HasDatabaseName("ix_ubigeos_padre_id");

                    b.HasIndex("Nivel", "Descripcion")
                        .HasDatabaseName("ix_ubigeo_nivel_descripcion");

                    b.ToTable("ubigeos", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Users.RolePermission", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("permission_id");

                    b.HasKey("RoleId", "PermissionId")
                        .HasName("pk_role_permissions");

                    b.HasIndex("PermissionId")
                        .HasDatabaseName("ix_rolepermissions_permissionid");

                    b.ToTable("role_permissions", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<int>("EstadoUser")
                        .HasColumnType("integer")
                        .HasColumnName("estado_user");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_eliminacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("nombre_completo");

                    b.Property<string>("Password")
                        .HasMaxLength(220)
                        .HasColumnType("character varying(220)")
                        .HasColumnName("password");

                    b.Property<string>("UserApellidos")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("user_apellidos");

                    b.Property<string>("UserDni")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("user_dni");

                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("user_name");

                    b.Property<string>("UserNombres")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("user_nombres");

                    b.Property<string>("UserTelefono")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("user_telefono");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioEliminacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_eliminacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_user_email");

                    b.HasIndex("NombreCompleto")
                        .HasDatabaseName("ix_user_nombrecompleto");

                    b.HasIndex("UserDni")
                        .HasDatabaseName("ix_user_userdni");

                    b.HasIndex("UserName")
                        .HasDatabaseName("ix_user_username");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Users.UserRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_default");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_user_roles");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_userroles_roleid");

                    b.ToTable("user_roles", (string)null);
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Organizaciones.Empresas.Empresa", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Masters.Ubigeos.Ubigeo", "DepartamentoEmpresa")
                        .WithMany()
                        .HasForeignKey("DepartamentoEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_empresas_ubigeo_departamento_empresa_id");

                    b.HasOne("NexaSoft.Agro.Domain.Masters.Ubigeos.Ubigeo", "DistritoEmpresa")
                        .WithMany()
                        .HasForeignKey("DistritoEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_empresas_ubigeo_distrito_empresa_id");

                    b.HasOne("NexaSoft.Agro.Domain.Features.Organizaciones.Organizacion", "Organizacion")
                        .WithMany()
                        .HasForeignKey("OrganizacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_empresas_organizacion_organizacion_id");

                    b.HasOne("NexaSoft.Agro.Domain.Masters.Ubigeos.Ubigeo", "ProvinciaEmpresa")
                        .WithMany()
                        .HasForeignKey("ProvinciaEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_empresas_ubigeo_provincia_empresa_id");

                    b.Navigation("DepartamentoEmpresa");

                    b.Navigation("DistritoEmpresa");

                    b.Navigation("Organizacion");

                    b.Navigation("ProvinciaEmpresa");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Archivos.Archivo", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.Estructuras.Estructura", "Estructura")
                        .WithMany()
                        .HasForeignKey("EstructuraId")
                        .HasConstraintName("fk_archivos_estructura_estructura_id");

                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.SubCapitulos.SubCapitulo", "SubCapitulo")
                        .WithMany()
                        .HasForeignKey("SubCapituloId")
                        .HasConstraintName("fk_archivos_sub_capitulo_sub_capitulo_id");

                    b.Navigation("Estructura");

                    b.Navigation("SubCapitulo");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Capitulos.Capitulo", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.EstudiosAmbientales.EstudioAmbiental", "EstudioAmbiental")
                        .WithMany()
                        .HasForeignKey("EstudioAmbientalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_capitulos_estudio_ambiental_estudio_ambiental_id");

                    b.Navigation("EstudioAmbiental");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Cumplimientos.Cumplimiento", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.EventosRegulatorios.EventoRegulatorio", "EventoRegulatorio")
                        .WithMany()
                        .HasForeignKey("EventoRegulatorioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cumplimientos_evento_regulatorio_evento_regulatorio_id");

                    b.Navigation("EventoRegulatorio");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Cumplimientos.CumplimientoSeguimiento", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.EventosRegulatorios.EventoRegulatorio", "EventoRegulatorio")
                        .WithMany()
                        .HasForeignKey("EventoRegulatorioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cumplimientos_seguimientos_evento_regulatorio_evento_regula");

                    b.Navigation("EventoRegulatorio");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Estructuras.Estructura", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.Estructuras.Estructura", "Padre")
                        .WithMany("Hijos")
                        .HasForeignKey("PadreEstructuraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_estructuras_estructuras_padre_estructura_id");

                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.SubCapitulos.SubCapitulo", "SubCapitulo")
                        .WithMany()
                        .HasForeignKey("SubCapituloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_estructuras_sub_capitulo_sub_capitulo_id");

                    b.Navigation("Padre");

                    b.Navigation("SubCapitulo");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.EstudiosAmbientales.EstudioAmbiental", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Organizaciones.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_estudios_ambientales_empresas_empresa_id");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.EventosRegulatorios.EventoRegulatorio", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.EstudiosAmbientales.EstudioAmbiental", "EstudioAmbiental")
                        .WithMany()
                        .HasForeignKey("EstudioAmbientalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_eventos_regulatorios_estudios_ambientales_estudio_ambiental");

                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.Responsables.Responsable", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_eventos_regulatorios_responsable_responsable_id");

                    b.Navigation("EstudioAmbiental");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Planos.Plano", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.Archivos.Archivo", "Archivo")
                        .WithMany()
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_planos_archivos_archivo_id");

                    b.HasOne("NexaSoft.Agro.Domain.Masters.Consultoras.Colaboradores.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_planos_colaboradores_colaborador_id");

                    b.Navigation("Archivo");

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Planos.PlanoDetalle", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.Planos.Plano", "Plano")
                        .WithMany("Detalles")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_plano_detalle_plano_plano_id");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Responsables.Responsable", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.EstudiosAmbientales.EstudioAmbiental", "EstudioAmbiental")
                        .WithMany()
                        .HasForeignKey("EstudioAmbientalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_responsables_estudios_ambientales_estudio_ambiental_id");

                    b.Navigation("EstudioAmbiental");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.SubCapitulos.SubCapitulo", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Features.Proyectos.Capitulos.Capitulo", "Capitulo")
                        .WithMany()
                        .HasForeignKey("CapituloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_subcapitulos_capitulos_capitulo_id");

                    b.Navigation("Capitulo");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Consultoras.Colaboradores.Colaborador", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Masters.Consultoras.Consultora", "Consultora")
                        .WithMany()
                        .HasForeignKey("ConsultoraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_colaboradores_consultora_consultora_id");

                    b.Navigation("Consultora");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Menus.MenuItemOption", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Masters.Menus.MenuItemOption", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_menu_item_options_menu_item_options_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Menus.MenuRole", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Masters.Menus.MenuItemOption", null)
                        .WithMany("Roles")
                        .HasForeignKey("MenuItemOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_menu_roles_menu_item_options_menu_item_option_id");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Ubigeos.Ubigeo", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Masters.Ubigeos.Ubigeo", "Padre")
                        .WithMany()
                        .HasForeignKey("PadreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_ubigeos_ubigeos_padre_id");

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Users.RolePermission", b =>
                {
                    b.HasOne("NexaSoft.Agro.Domain.Masters.Permissions.Permission", null)
                        .WithMany("_rolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_role_permissions_permissions_permission_id");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Estructuras.Estructura", b =>
                {
                    b.Navigation("Hijos");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Features.Proyectos.Planos.Plano", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Menus.MenuItemOption", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NexaSoft.Agro.Domain.Masters.Permissions.Permission", b =>
                {
                    b.Navigation("_rolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
